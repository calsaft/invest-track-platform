
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cqamurpuhqzevgzhqjwk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNxYW11cnB1aHF6ZXZnemhxandrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0MjU2NzEsImV4cCI6MjA2MjAwMTY3MX0.-Q63kAfyqb1slDEM9ep19v8Jd2DzLfRDX6ZXrySsotE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a helper function to initialize admin users if needed
export const initializeAdminUsers = async () => {
  const admins = [
    {
      email: 'admin@example.com',
      password: 'admin123',
      name: 'Admin User',
      role: 'admin',
      balance: 10000
    },
    {
      email: 'Gurutech@gmail.com',
      password: 'Guru2030',
      name: 'Gurutech',
      role: 'admin',
      balance: 10000
    },
    {
      email: 'caltech@gmail.com',
      password: 'Caltech2030',
      name: 'Caltech',
      role: 'admin',
      balance: 10000
    }
  ];

  for (const admin of admins) {
    const { data: existingUser } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', admin.email)
      .single();

    if (!existingUser) {
      // Check if the user exists in auth
      const { data: authUser } = await supabase.auth.signInWithPassword({
        email: admin.email,
        password: admin.password
      });
      
      if (!authUser.user) {
        // Create auth user
        await supabase.auth.signUp({
          email: admin.email,
          password: admin.password,
          options: {
            data: {
              name: admin.name
            }
          }
        });
      }
    }
  }
};
